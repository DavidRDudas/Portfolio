class ColorWaveEngine{constructor(t,i={}){this.canvas=t,this.ctx=t.getContext("2d",{alpha:!0}),this.particles=[],this.waves=[],this.harmonics=[1,1.618,2,2.618,3],this.colorPhase=0,this.config={fadeSpeed:.1,waveSpeed:.001,maxParticleSize:8,minParticleSize:2,neighborRadius:50,colorSpeed:.001,maxParticles:300,saturationRange:{min:70,max:95},lightnessRange:{min:40,max:65},showConnections:!0,connectionDistance:100,connectionOpacity:.2,flockingEnabled:!1,flockingForce:.02,emergencyMode:!1,emergencySpeed:2,showTrails:!1,trailLength:20,trailOpacity:.5,attractorStrength:.5,attractorRadius:200,effectStrength:1,particleShape:"circle",glowEffect:!1,glowStrength:10,pulseEffect:!1,pulseSpeed:.005,behavior:"default",bounceElasticity:.8,orbitRadius:100,orbitSpeed:.02,pattern:"random",patternSpacing:50,patternScale:1,...i},this.presets={calm:{waveSpeed:5e-4,fadeSpeed:.05,colorSpeed:3e-4,maxParticleSize:8,neighborRadius:40,saturationRange:{min:60,max:80},lightnessRange:{min:40,max:60},showConnections:!0,connectionDistance:80,connectionOpacity:.15,flockingEnabled:!1,showTrails:!1,particleShape:"circle"},energetic:{waveSpeed:.003,fadeSpeed:.12,colorSpeed:.002,maxParticleSize:12,neighborRadius:70,saturationRange:{min:85,max:100},lightnessRange:{min:50,max:75},showConnections:!0,connectionDistance:120,connectionOpacity:.3,flockingEnabled:!0,flockingForce:.008,showTrails:!0,trailLength:15,particleShape:"star"},cosmic:{waveSpeed:.001,fadeSpeed:.04,colorSpeed:8e-4,maxParticleSize:15,neighborRadius:90,saturationRange:{min:70,max:90},lightnessRange:{min:30,max:70},showConnections:!0,connectionDistance:150,connectionOpacity:.2,flockingEnabled:!0,flockingForce:.003,showTrails:!0,trailLength:30,particleShape:"circle"},minimal:{waveSpeed:8e-4,fadeSpeed:.15,colorSpeed:5e-4,maxParticleSize:6,neighborRadius:30,saturationRange:{min:20,max:40},lightnessRange:{min:60,max:80},showConnections:!1,flockingEnabled:!1,showTrails:!1,particleShape:"square"},chaos:{waveSpeed:.004,fadeSpeed:.2,colorSpeed:.003,maxParticleSize:10,neighborRadius:100,saturationRange:{min:90,max:100},lightnessRange:{min:45,max:65},showConnections:!0,connectionDistance:200,connectionOpacity:.4,flockingEnabled:!0,flockingForce:.015,showTrails:!0,trailLength:25,particleShape:"triangle"}},this.timeScale={x:1e3,y:1500},this.trails=new Map,this.attractors=[],this.particleSystems=[],this.activeEffect="none",this.originalValues={},this.offscreenCanvas=document.createElement("canvas"),this.offscreenCanvas.width=t.width,this.offscreenCanvas.height=t.height,this.offscreenCtx=this.offscreenCanvas.getContext("2d"),this.grid=new Map,this.cellSize=100,this.isPaused=!1,this.showParticles=!0,this.time=0,this.centerX=t.width/2,this.centerY=t.height/2}initialize(t=100){for(let i=0;i<t;i++)this.particles.push({x:Math.random()*this.canvas.width,y:Math.random()*this.canvas.height,frequency:this.harmonics[Math.floor(Math.random()*this.harmonics.length)],amplitude:20*Math.random()+10,phase:Math.random()*Math.PI*2,color:this.generateColor(),size:Math.random()*(this.config.maxParticleSize-this.config.minParticleSize)+this.config.minParticleSize})}generateColor(){return`hsl(${360*this.colorPhase%360}, ${this.config.saturationRange.min+Math.sin(2.5*this.colorPhase)*(this.config.saturationRange.max-this.config.saturationRange.min)}%, ${this.config.lightnessRange.min+Math.cos(1.8*this.colorPhase)*(this.config.lightnessRange.max-this.config.lightnessRange.min)}%)`}update(){if(this.isPaused)return;this.colorPhase+=this.config.colorSpeed;const t=performance.now();this.config.showTrails||this.trails.clear(),this.particles.forEach((i=>{const e=i.x,a=i.y;if("default"===this.config.behavior){const e=Math.sin((i.phase+t/this.timeScale.x)*i.frequency)*i.amplitude,a=Math.cos((i.phase+t/this.timeScale.y)*i.frequency)*i.amplitude;i.x+=.1*e,i.y+=.1*a}else this.updateParticleBehavior(i);i.dx&&(i.x+=i.dx),i.dy&&(i.y+=i.dy),i.dx&&(i.dx*=.98),i.dy&&(i.dy*=.98),"none"!==this.activeEffect&&this.applyEffect(i),this.applyAttractors(i),this.config.showTrails&&this.updateTrails(i,e,a),i.x=(i.x%this.canvas.width+this.canvas.width)%this.canvas.width,i.y=(i.y%this.canvas.height+this.canvas.height)%this.canvas.height}))}createSpatialGrid(){const t=this.config.neighborRadius,i=new Map;return this.particles.forEach(((e,a)=>{const s=`${Math.floor(e.x/t)},${Math.floor(e.y/t)}`;i.has(s)||i.set(s,[]),i.get(s).push(a)})),i}findNeighborsGrid(t,i){const e=this.config.neighborRadius,a=Math.floor(t.x/e),s=Math.floor(t.y/e),n=[];for(let e=-1;e<=1;e++)for(let h=-1;h<=1;h++){const c=`${a+e},${s+h}`,o=i.get(c);if(o)for(const i of o){const e=this.particles[i];if(e===t)continue;const a=e.x-t.x,s=e.y-t.y;a*a+s*s<this.config.neighborRadius*this.config.neighborRadius&&n.push(e)}}return n}drawConnections(){if(!this.config.showConnections)return;const t=this.createSpatialGrid();this.particles.forEach((i=>{this.findNeighborsGrid(i,t).forEach((t=>{const e=Math.hypot(t.x-i.x,t.y-i.y);if(e<=this.config.connectionDistance){const a=(1-e/this.config.connectionDistance)*this.config.connectionOpacity;this.ctx.beginPath(),this.ctx.strokeStyle=`rgba(255,255,255,${a})`,this.ctx.moveTo(i.x,i.y),this.ctx.lineTo(t.x,t.y),this.ctx.stroke()}}))}))}applyFlocking(t,i){if(!this.config.flockingEnabled)return;let e=0,a=0,s=0,n=0;i.forEach((t=>{e+=t.x,a+=t.y,s+=t.dx||0,n+=t.dy||0})),i.length>0&&(e/=i.length,a/=i.length,s/=i.length,n/=i.length,t.dx=(t.dx||0)+(e-t.x)*this.config.flockingForce,t.dy=(t.dy||0)+(a-t.y)*this.config.flockingForce)}triggerEmergencyMode(){this.config.emergencyMode||(this.config.emergencyMode=!0,this.originalValues={waveSpeed:this.config.waveSpeed,colorSpeed:this.config.colorSpeed,fadeSpeed:this.config.fadeSpeed},this.config.waveSpeed*=this.config.emergencySpeed,this.config.colorSpeed*=this.config.emergencySpeed,this.config.fadeSpeed*=1.5,this.particles.forEach((t=>{t.amplitude*=2,t.frequency*=1.5,t.dx||(t.dx=0),t.dy||(t.dy=0),t.dx+=10*(Math.random()-.5),t.dy+=10*(Math.random()-.5)})))}draw(){this.ctx.fillStyle=`rgba(0, 0, 0, ${this.config.fadeSpeed})`,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.config.showTrails&&this.drawTrails(),this.config.showConnections&&this.drawConnections(),this.showParticles&&this.particles.forEach((t=>{this.drawParticle(t)}))}updateTrails(t,i,e){this.trails.has(t)||this.trails.set(t,[]);const a=this.trails.get(t);a.push({x:t.x,y:t.y,color:t.color}),a.length>this.config.trailLength&&a.shift();const s=a[a.length-2];if(s){const i=Math.abs(t.x-s.x),e=Math.abs(t.y-s.y);(i>this.canvas.width/2||e>this.canvas.height/2)&&this.trails.set(t,[{x:t.x,y:t.y,color:t.color}])}}drawTrails(){this.trails.forEach(((t,i)=>{if(t.length<2)return;this.ctx.beginPath(),this.ctx.moveTo(t[0].x,t[0].y);for(let i=1;i<t.length;i++){const e=t[i];this.ctx.lineTo(e.x,e.y)}const e=this.ctx.createLinearGradient(t[0].x,t[0].y,t[t.length-1].x,t[t.length-1].y);e.addColorStop(0,"rgba(0,0,0,0)"),e.addColorStop(1,i.color),this.ctx.strokeStyle=e,this.ctx.lineWidth=i.size/2,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.stroke()}))}addAttractor(t,i,e=1){this.attractors.push({x:t,y:i,strength:e})}clearAttractors(){this.attractors=[]}applyAttractors(t){this.attractors.forEach((i=>{const e=i.x-t.x,a=i.y-t.y,s=Math.hypot(e,a);if(s<this.config.attractorRadius){const n=(1-s/this.config.attractorRadius)*this.config.attractorStrength*i.strength;t.x+=e*n,t.y+=a*n}}))}setEffect(t){this.activeEffect=t}applyEffect(t){const i=this.canvas.width/2,e=this.canvas.height/2;switch(this.activeEffect){case"fountain":void 0===t.dy&&(t.dy=-10*Math.random(),t.dx=5*(Math.random()-.5)),t.dy+=.2,t.x+=t.dx,t.y+=t.dy,t.y>this.canvas.height&&(t.y=e,t.dy=-10*Math.random(),t.dx=5*(Math.random()-.5));break;case"vortex":const a=t.x-i,s=t.y-e,n=Math.atan2(s,a),h=Math.hypot(a,s);t.x=i+Math.cos(n+.02)*h,t.y=e+Math.sin(n+.02)*h}}triggerExplosion(t,i,e=1){const a=200*e;this.particles.forEach((s=>{const n=s.x-t,h=s.y-i,c=Math.hypot(n,h);if(c<a){s.dx||(s.dx=0),s.dy||(s.dy=0);const t=(1-c/a)*e*20;s.dx+=n/c*t,s.dy+=h/c*t}}))}stopEmergencyMode(){this.config.emergencyMode&&(this.config.emergencyMode=!1,this.originalValues.waveSpeed&&(this.config.waveSpeed=this.originalValues.waveSpeed,this.config.colorSpeed=this.originalValues.colorSpeed,this.config.fadeSpeed=this.originalValues.fadeSpeed),this.particles.forEach((t=>{t.amplitude/=2,t.frequency/=1.5,t.dx=0,t.dy=0})))}createParticle(t,i){return{x:t,y:i,frequency:this.harmonics[Math.floor(Math.random()*this.harmonics.length)],amplitude:20*Math.random()+10,phase:Math.random()*Math.PI*2,color:this.generateColor(),size:Math.random()*(this.config.maxParticleSize-this.config.minParticleSize)+this.config.minParticleSize,dx:0,dy:0,baseSize:Math.random()*(this.config.maxParticleSize-this.config.minParticleSize)+this.config.minParticleSize}}drawParticle(t){this.ctx.save();let i=t.baseSize||t.size;if(this.config.pulseEffect){const t=performance.now()*this.config.pulseSpeed;i*=1+.5*Math.sin(t)}if(this.config.glowEffect)switch(this.ctx.globalAlpha=.3,this.ctx.fillStyle=t.color,this.config.particleShape){case"square":this.ctx.fillRect(t.x-i,t.y-i,2*i,2*i);break;case"triangle":this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y-2*i),this.ctx.lineTo(t.x+2*i,t.y+2*i),this.ctx.lineTo(t.x-2*i,t.y+2*i),this.ctx.closePath(),this.ctx.fill();break;case"star":this.drawStar(t.x,t.y,2*i);break;default:this.ctx.beginPath(),this.ctx.arc(t.x,t.y,i,0,2*Math.PI),this.ctx.fill()}switch(this.ctx.globalAlpha=1,this.ctx.fillStyle=t.color,this.config.particleShape){case"square":this.ctx.fillRect(t.x-i/2,t.y-i/2,i,i);break;case"triangle":this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y-i),this.ctx.lineTo(t.x+i,t.y+i),this.ctx.lineTo(t.x-i,t.y+i),this.ctx.closePath(),this.ctx.fill();break;case"star":this.drawStar(t.x,t.y,i);break;default:this.ctx.beginPath(),this.ctx.arc(t.x,t.y,i/2,0,2*Math.PI),this.ctx.fill()}this.ctx.restore()}drawStar(t,i,e){this.ctx.beginPath();for(let a=0;a<5;a++){const s=4*a*Math.PI/5-Math.PI/2,n={x:t+Math.cos(s)*e,y:i+Math.sin(s)*e};0===a?this.ctx.moveTo(n.x,n.y):this.ctx.lineTo(n.x,n.y)}this.ctx.closePath(),this.ctx.fill()}updateGrid(){this.grid.clear(),this.particles.forEach((t=>{const i=`${Math.floor(t.x/this.cellSize)},${Math.floor(t.y/this.cellSize)}`;this.grid.has(i)||this.grid.set(i,[]),this.grid.get(i).push(t)}))}getNearbyParticles(t){const i=Math.floor(t.x/this.cellSize),e=Math.floor(t.y/this.cellSize),a=[];for(let t=-1;t<=1;t++)for(let s=-1;s<=1;s++){const n=`${i+t},${e+s}`;this.grid.has(n)&&a.push(...this.grid.get(n))}return a}togglePause(){this.isPaused=!this.isPaused}generatePattern(t,i){let e;switch(i=Math.min(i,this.config.maxParticles),t){case"spiral":e=this.generateSpiral(i);break;case"grid":e=this.generateGrid(i);break;case"mandala":e=this.generateMandala(i);break;default:e=this.generateRandom(i)}return e.slice(0,i)}generateSpiral(t){const i=[],e=2*Math.PI/t,a=.1*this.config.patternSpacing;for(let s=0;s<t;s++){const t=s*e,n=s*a*this.config.patternScale;i.push(this.createParticle(this.centerX+Math.cos(t)*n,this.centerY+Math.sin(t)*n))}return i}generateGrid(t){const i=[],e=Math.ceil(Math.sqrt(t)),a=this.config.patternSpacing*this.config.patternScale,s=this.centerX-e*a/2,n=this.centerY-e*a/2;for(let h=0;h<e&&i.length<t;h++)for(let c=0;c<e&&i.length<t;c++)i.push(this.createParticle(s+h*a,n+c*a));return i}generateMandala(t){const i=[],e=Math.ceil(Math.sqrt(t/2)),a=Math.ceil(t/e);for(let s=1;s<=e&&i.length<t;s++){const e=s*this.config.patternSpacing*this.config.patternScale,n=2*Math.PI/Math.min(a*s,t-i.length);for(let h=0;h<a*s&&i.length<t;h++){const t=h*n;i.push(this.createParticle(this.centerX+Math.cos(t)*e,this.centerY+Math.sin(t)*e))}}return i}updateParticleBehavior(t){switch(this.config.behavior){case"bounce":this.applyBounce(t);break;case"orbit":this.applyOrbit(t);break;case"swarm":this.applySwarm(t)}}applyBounce(t){t.dx=t.dx||0,t.dy=t.dy||0,t.dy+=.1,t.x+=t.dx,t.y+=t.dy,(t.x<=0||t.x>=this.canvas.width)&&(t.dx*=-this.config.bounceElasticity,t.x=Math.max(0,Math.min(this.canvas.width,t.x))),(t.y<=0||t.y>=this.canvas.height)&&(t.dy*=-this.config.bounceElasticity,t.y=Math.max(0,Math.min(this.canvas.height,t.y)))}applyOrbit(t){t.orbitCenterX||(t.orbitCenterX=t.x,t.orbitCenterY=t.y,t.orbitAngle=Math.random()*Math.PI*2),t.orbitAngle+=this.config.orbitSpeed,t.x=t.orbitCenterX+Math.cos(t.orbitAngle)*this.config.orbitRadius,t.y=t.orbitCenterY+Math.sin(t.orbitAngle)*this.config.orbitRadius}resetParticleBehavior(t){t.dx=0,t.dy=0,delete t.orbitCenterX,delete t.orbitCenterY,delete t.orbitAngle,t.phase=Math.random()*Math.PI*2}updateParticle(t){if(this.config.flockingEnabled){const i=this.getNeighbors(t);if(i.length>0){let e=0,a=0;i.forEach((t=>{e+=t.x,a+=t.y})),e/=i.length,a/=i.length,t.dx+=(e-t.x)*this.config.flockingForce*2.5,t.dy+=(a-t.y)*this.config.flockingForce*2.5;let s=0,n=0;i.forEach((t=>{s+=t.dx||0,n+=t.dy||0})),s/=i.length,n/=i.length,t.dx+=(s-t.dx)*this.config.flockingForce*4,t.dy+=(n-t.dy)*this.config.flockingForce*4;let h=0,c=0;i.forEach((i=>{const e=t.x-i.x,a=t.y-i.y,s=Math.sqrt(e*e+a*a);s<.4*this.config.neighborRadius&&(h+=e/(s||1),c+=a/(s||1))})),t.dx+=h*this.config.flockingForce*5,t.dy+=c*this.config.flockingForce*5}const e=.001*performance.now();t.dx+=Math.sin(e+t.phase)*this.config.flockingForce*.8,t.dy+=Math.cos(e+t.phase)*this.config.flockingForce*.8;const a=Math.sqrt(t.dx*t.dx+t.dy*t.dy),s=3.5;a>s&&(t.dx=t.dx/a*s,t.dy=t.dy/a*s);const n=.5;a<n&&(t.dx*=n/a,t.dy*=n/a)}}getNeighbors(t){return this.particles.filter((i=>{if(i===t)return!1;const e=i.x-t.x,a=i.y-t.y;return Math.sqrt(e*e+a*a)<this.config.neighborRadius}))}}